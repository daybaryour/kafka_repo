services:
  zookeeper:
    image: quay.io/debezium/zookeeper:2.7
    container_name: zookeeper
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    networks:
      - kafka-network

  kafka:
    image: quay.io/debezium/kafka:2.7
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
    networks:
      - kafka-network
    depends_on:
      - zookeeper

  # mysql:
  #   image: quay.io/debezium/example-mysql:2.7
  #   container_name: mysql
  #   ports:
  #     - "3306:3306"
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=debezium
  #     - MYSQL_USER=mysqluser
  #     - MYSQL_PASSWORD=mysqlpw
  #   networks:
  #     - kafka-network

  # phpmyadmin:
  #   image: phpmyadmin
  #   container_name: phpmyadmin
  #   restart: always
  #   ports:
  #     - "8080:80"
  #   environment:
  #     - PMA_HOST=mysql
  #     - PMA_PORT=3306
  #     - MYSQL_ROOT_PASSWORD=debezium
  #   networks:
  #     - kafka-network


  # connect:
  #   image: quay.io/debezium/connect:2.7
  #   container_name: connect
  #   ports:
  #     - "8083:8083"
  #   environment:
  #     - GROUP_ID=1
  #     - CONFIG_STORAGE_TOPIC=my_connect_configs
  #     - OFFSET_STORAGE_TOPIC=my_connect_offsets
  #     - STATUS_STORAGE_TOPIC=my_connect_statuses
  #     - BOOTSTRAP_SERVERS=kafka:9092
  #   networks:
  #     - kafka-network
  #   depends_on:
  #     - kafka
  #     - mysql

  # watcher:
  #   image: quay.io/debezium/kafka:2.7
  #   container_name: watcher
  #   command: watch-topic -a -k dbserver1.inventory.customers
  #   networks:
  #     - kafka-network

networks:
  kafka-network:
    driver: bridge